//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RentTransportWPF.ServiceRent {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Admin", Namespace="http://schemas.datacontract.org/2004/07/WCF_Rent.HeaderFile")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RentTransportWPF.ServiceRent.Account))]
    public partial class Admin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int levelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int level {
            get {
                return this.levelField;
            }
            set {
                if ((this.levelField.Equals(value) != true)) {
                    this.levelField = value;
                    this.RaisePropertyChanged("level");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/WCF_Rent.HeaderFile")]
    [System.SerializableAttribute()]
    public partial class Account : RentTransportWPF.ServiceRent.Admin {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int acceptedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float balanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int documentidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fathernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string loginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string secondnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float totalMoneyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int accepted {
            get {
                return this.acceptedField;
            }
            set {
                if ((this.acceptedField.Equals(value) != true)) {
                    this.acceptedField = value;
                    this.RaisePropertyChanged("accepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float balance {
            get {
                return this.balanceField;
            }
            set {
                if ((this.balanceField.Equals(value) != true)) {
                    this.balanceField = value;
                    this.RaisePropertyChanged("balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateCreate {
            get {
                return this.dateCreateField;
            }
            set {
                if ((this.dateCreateField.Equals(value) != true)) {
                    this.dateCreateField = value;
                    this.RaisePropertyChanged("dateCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int documentid {
            get {
                return this.documentidField;
            }
            set {
                if ((this.documentidField.Equals(value) != true)) {
                    this.documentidField = value;
                    this.RaisePropertyChanged("documentid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fathername {
            get {
                return this.fathernameField;
            }
            set {
                if ((object.ReferenceEquals(this.fathernameField, value) != true)) {
                    this.fathernameField = value;
                    this.RaisePropertyChanged("fathername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string login {
            get {
                return this.loginField;
            }
            set {
                if ((object.ReferenceEquals(this.loginField, value) != true)) {
                    this.loginField = value;
                    this.RaisePropertyChanged("login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mail {
            get {
                return this.mailField;
            }
            set {
                if ((object.ReferenceEquals(this.mailField, value) != true)) {
                    this.mailField = value;
                    this.RaisePropertyChanged("mail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string secondname {
            get {
                return this.secondnameField;
            }
            set {
                if ((object.ReferenceEquals(this.secondnameField, value) != true)) {
                    this.secondnameField = value;
                    this.RaisePropertyChanged("secondname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float totalMoney {
            get {
                return this.totalMoneyField;
            }
            set {
                if ((this.totalMoneyField.Equals(value) != true)) {
                    this.totalMoneyField = value;
                    this.RaisePropertyChanged("totalMoney");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rent", Namespace="http://schemas.datacontract.org/2004/07/WCF_Rent.HeaderFile")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RentTransportWPF.ServiceRent.Vehicle))]
    public partial class Rent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int clientidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime end_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int rentlogidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime start_dateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int clientid {
            get {
                return this.clientidField;
            }
            set {
                if ((this.clientidField.Equals(value) != true)) {
                    this.clientidField = value;
                    this.RaisePropertyChanged("clientid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime end_date {
            get {
                return this.end_dateField;
            }
            set {
                if ((this.end_dateField.Equals(value) != true)) {
                    this.end_dateField = value;
                    this.RaisePropertyChanged("end_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int rentlogid {
            get {
                return this.rentlogidField;
            }
            set {
                if ((this.rentlogidField.Equals(value) != true)) {
                    this.rentlogidField = value;
                    this.RaisePropertyChanged("rentlogid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime start_date {
            get {
                return this.start_dateField;
            }
            set {
                if ((this.start_dateField.Equals(value) != true)) {
                    this.start_dateField = value;
                    this.RaisePropertyChanged("start_date");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vehicle", Namespace="http://schemas.datacontract.org/2004/07/WCF_Rent.HeaderFile")]
    [System.SerializableAttribute()]
    public partial class Vehicle : RentTransportWPF.ServiceRent.Rent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string categoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float fuelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float maxfuelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int maxspeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float mileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string modelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string picturepathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string plateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string transmissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VIN {
            get {
                return this.VINField;
            }
            set {
                if ((object.ReferenceEquals(this.VINField, value) != true)) {
                    this.VINField = value;
                    this.RaisePropertyChanged("VIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                if ((object.ReferenceEquals(this.categoryField, value) != true)) {
                    this.categoryField = value;
                    this.RaisePropertyChanged("category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float fuel {
            get {
                return this.fuelField;
            }
            set {
                if ((this.fuelField.Equals(value) != true)) {
                    this.fuelField = value;
                    this.RaisePropertyChanged("fuel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float maxfuel {
            get {
                return this.maxfuelField;
            }
            set {
                if ((this.maxfuelField.Equals(value) != true)) {
                    this.maxfuelField = value;
                    this.RaisePropertyChanged("maxfuel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int maxspeed {
            get {
                return this.maxspeedField;
            }
            set {
                if ((this.maxspeedField.Equals(value) != true)) {
                    this.maxspeedField = value;
                    this.RaisePropertyChanged("maxspeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float mileage {
            get {
                return this.mileageField;
            }
            set {
                if ((this.mileageField.Equals(value) != true)) {
                    this.mileageField = value;
                    this.RaisePropertyChanged("mileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string model {
            get {
                return this.modelField;
            }
            set {
                if ((object.ReferenceEquals(this.modelField, value) != true)) {
                    this.modelField = value;
                    this.RaisePropertyChanged("model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string picturepath {
            get {
                return this.picturepathField;
            }
            set {
                if ((object.ReferenceEquals(this.picturepathField, value) != true)) {
                    this.picturepathField = value;
                    this.RaisePropertyChanged("picturepath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string plate {
            get {
                return this.plateField;
            }
            set {
                if ((object.ReferenceEquals(this.plateField, value) != true)) {
                    this.plateField = value;
                    this.RaisePropertyChanged("plate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string transmission {
            get {
                return this.transmissionField;
            }
            set {
                if ((object.ReferenceEquals(this.transmissionField, value) != true)) {
                    this.transmissionField = value;
                    this.RaisePropertyChanged("transmission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatInfo", Namespace="http://schemas.datacontract.org/2004/07/WCF_Rent.Structures")]
    [System.SerializableAttribute()]
    public partial class StatInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime endDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime startDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentTransportWPF.ServiceRent.StatBalanceInfo[] statBalancesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentTransportWPF.ServiceRent.StatVehicleInfo[] statVehiclesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentTransportWPF.ServiceRent.StatVoucherInfo[] statVouchersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float totalbalanceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime endDate {
            get {
                return this.endDateField;
            }
            set {
                if ((this.endDateField.Equals(value) != true)) {
                    this.endDateField = value;
                    this.RaisePropertyChanged("endDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime startDate {
            get {
                return this.startDateField;
            }
            set {
                if ((this.startDateField.Equals(value) != true)) {
                    this.startDateField = value;
                    this.RaisePropertyChanged("startDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentTransportWPF.ServiceRent.StatBalanceInfo[] statBalances {
            get {
                return this.statBalancesField;
            }
            set {
                if ((object.ReferenceEquals(this.statBalancesField, value) != true)) {
                    this.statBalancesField = value;
                    this.RaisePropertyChanged("statBalances");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentTransportWPF.ServiceRent.StatVehicleInfo[] statVehicles {
            get {
                return this.statVehiclesField;
            }
            set {
                if ((object.ReferenceEquals(this.statVehiclesField, value) != true)) {
                    this.statVehiclesField = value;
                    this.RaisePropertyChanged("statVehicles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentTransportWPF.ServiceRent.StatVoucherInfo[] statVouchers {
            get {
                return this.statVouchersField;
            }
            set {
                if ((object.ReferenceEquals(this.statVouchersField, value) != true)) {
                    this.statVouchersField = value;
                    this.RaisePropertyChanged("statVouchers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float totalbalance {
            get {
                return this.totalbalanceField;
            }
            set {
                if ((this.totalbalanceField.Equals(value) != true)) {
                    this.totalbalanceField = value;
                    this.RaisePropertyChanged("totalbalance");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatBalanceInfo", Namespace="http://schemas.datacontract.org/2004/07/WCF_Rent.Structures")]
    [System.SerializableAttribute()]
    public partial class StatBalanceInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentTransportWPF.ServiceRent.Account accountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float cardnumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentTransportWPF.ServiceRent.Account account {
            get {
                return this.accountField;
            }
            set {
                if ((object.ReferenceEquals(this.accountField, value) != true)) {
                    this.accountField = value;
                    this.RaisePropertyChanged("account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float cardnumber {
            get {
                return this.cardnumberField;
            }
            set {
                if ((this.cardnumberField.Equals(value) != true)) {
                    this.cardnumberField = value;
                    this.RaisePropertyChanged("cardnumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                if ((this.dateTimeField.Equals(value) != true)) {
                    this.dateTimeField = value;
                    this.RaisePropertyChanged("dateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatVehicleInfo", Namespace="http://schemas.datacontract.org/2004/07/WCF_Rent.Structures")]
    [System.SerializableAttribute()]
    public partial class StatVehicleInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentTransportWPF.ServiceRent.Account accountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float creditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float paymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime rent_endDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime rent_startDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float returningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int useridField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentTransportWPF.ServiceRent.Vehicle vehicleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VIN {
            get {
                return this.VINField;
            }
            set {
                if ((object.ReferenceEquals(this.VINField, value) != true)) {
                    this.VINField = value;
                    this.RaisePropertyChanged("VIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentTransportWPF.ServiceRent.Account account {
            get {
                return this.accountField;
            }
            set {
                if ((object.ReferenceEquals(this.accountField, value) != true)) {
                    this.accountField = value;
                    this.RaisePropertyChanged("account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float credit {
            get {
                return this.creditField;
            }
            set {
                if ((this.creditField.Equals(value) != true)) {
                    this.creditField = value;
                    this.RaisePropertyChanged("credit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float payment {
            get {
                return this.paymentField;
            }
            set {
                if ((this.paymentField.Equals(value) != true)) {
                    this.paymentField = value;
                    this.RaisePropertyChanged("payment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime rent_endDate {
            get {
                return this.rent_endDateField;
            }
            set {
                if ((this.rent_endDateField.Equals(value) != true)) {
                    this.rent_endDateField = value;
                    this.RaisePropertyChanged("rent_endDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime rent_startDate {
            get {
                return this.rent_startDateField;
            }
            set {
                if ((this.rent_startDateField.Equals(value) != true)) {
                    this.rent_startDateField = value;
                    this.RaisePropertyChanged("rent_startDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float returning {
            get {
                return this.returningField;
            }
            set {
                if ((this.returningField.Equals(value) != true)) {
                    this.returningField = value;
                    this.RaisePropertyChanged("returning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userid {
            get {
                return this.useridField;
            }
            set {
                if ((this.useridField.Equals(value) != true)) {
                    this.useridField = value;
                    this.RaisePropertyChanged("userid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentTransportWPF.ServiceRent.Vehicle vehicle {
            get {
                return this.vehicleField;
            }
            set {
                if ((object.ReferenceEquals(this.vehicleField, value) != true)) {
                    this.vehicleField = value;
                    this.RaisePropertyChanged("vehicle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatVoucherInfo", Namespace="http://schemas.datacontract.org/2004/07/WCF_Rent.Structures")]
    [System.SerializableAttribute()]
    public partial class StatVoucherInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string operationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string timeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string operation {
            get {
                return this.operationField;
            }
            set {
                if ((object.ReferenceEquals(this.operationField, value) != true)) {
                    this.operationField = value;
                    this.RaisePropertyChanged("operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string time {
            get {
                return this.timeField;
            }
            set {
                if ((object.ReferenceEquals(this.timeField, value) != true)) {
                    this.timeField = value;
                    this.RaisePropertyChanged("time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CashVoucherData", Namespace="http://schemas.datacontract.org/2004/07/WCF_Rent.HeaderFile")]
    [System.SerializableAttribute()]
    public partial class CashVoucherData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string companyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string streetNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string companyName {
            get {
                return this.companyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.companyNameField, value) != true)) {
                    this.companyNameField = value;
                    this.RaisePropertyChanged("companyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string path {
            get {
                return this.pathField;
            }
            set {
                if ((object.ReferenceEquals(this.pathField, value) != true)) {
                    this.pathField = value;
                    this.RaisePropertyChanged("path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string streetName {
            get {
                return this.streetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.streetNameField, value) != true)) {
                    this.streetNameField = value;
                    this.RaisePropertyChanged("streetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CashVoucher", Namespace="http://schemas.datacontract.org/2004/07/WCF_Rent.HeaderFile")]
    [System.SerializableAttribute()]
    public partial class CashVoucher : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FinalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FinalDate {
            get {
                return this.FinalDateField;
            }
            set {
                if ((this.FinalDateField.Equals(value) != true)) {
                    this.FinalDateField = value;
                    this.RaisePropertyChanged("FinalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vehicle {
            get {
                return this.VehicleField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleField, value) != true)) {
                    this.VehicleField = value;
                    this.RaisePropertyChanged("Vehicle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceRent.IServiceRent", CallbackContract=typeof(RentTransportWPF.ServiceRent.IServiceRentCallback))]
    public interface IServiceRent {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/userConnect", ReplyAction="http://tempuri.org/IServiceRent/userConnectResponse")]
        int userConnect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/userConnect", ReplyAction="http://tempuri.org/IServiceRent/userConnectResponse")]
        System.Threading.Tasks.Task<int> userConnectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/userDisconnect", ReplyAction="http://tempuri.org/IServiceRent/userDisconnectResponse")]
        void userDisconnect(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/userDisconnect", ReplyAction="http://tempuri.org/IServiceRent/userDisconnectResponse")]
        System.Threading.Tasks.Task userDisconnectAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/selectAccount", ReplyAction="http://tempuri.org/IServiceRent/selectAccountResponse")]
        RentTransportWPF.ServiceRent.Account selectAccount(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/selectAccount", ReplyAction="http://tempuri.org/IServiceRent/selectAccountResponse")]
        System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.Account> selectAccountAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/createSqlConnection")]
        void createSqlConnection(string path);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/createSqlConnection")]
        System.Threading.Tasks.Task createSqlConnectionAsync(string path);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/selectAllVehicle")]
        void selectAllVehicle();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/selectAllVehicle")]
        System.Threading.Tasks.Task selectAllVehicleAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/deleteVehicle")]
        void deleteVehicle(RentTransportWPF.ServiceRent.Vehicle vehicleObject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/deleteVehicle")]
        System.Threading.Tasks.Task deleteVehicleAsync(RentTransportWPF.ServiceRent.Vehicle vehicleObject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/addVehicle")]
        void addVehicle(RentTransportWPF.ServiceRent.Vehicle vehicleObject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/addVehicle")]
        System.Threading.Tasks.Task addVehicleAsync(RentTransportWPF.ServiceRent.Vehicle vehicleObject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/saveVehicle")]
        void saveVehicle(RentTransportWPF.ServiceRent.Vehicle vehicleObject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/saveVehicle")]
        System.Threading.Tasks.Task saveVehicleAsync(RentTransportWPF.ServiceRent.Vehicle vehicleObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/isAccountValid", ReplyAction="http://tempuri.org/IServiceRent/isAccountValidResponse")]
        bool isAccountValid(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/isAccountValid", ReplyAction="http://tempuri.org/IServiceRent/isAccountValidResponse")]
        System.Threading.Tasks.Task<bool> isAccountValidAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/isSqlConnection", ReplyAction="http://tempuri.org/IServiceRent/isSqlConnectionResponse")]
        bool isSqlConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/isSqlConnection", ReplyAction="http://tempuri.org/IServiceRent/isSqlConnectionResponse")]
        System.Threading.Tasks.Task<bool> isSqlConnectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/getUserVehicle", ReplyAction="http://tempuri.org/IServiceRent/getUserVehicleResponse")]
        RentTransportWPF.ServiceRent.Vehicle getUserVehicle(RentTransportWPF.ServiceRent.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/getUserVehicle", ReplyAction="http://tempuri.org/IServiceRent/getUserVehicleResponse")]
        System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.Vehicle> getUserVehicleAsync(RentTransportWPF.ServiceRent.Account account);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/saveAccount")]
        void saveAccount(RentTransportWPF.ServiceRent.Account accountObject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/saveAccount")]
        System.Threading.Tasks.Task saveAccountAsync(RentTransportWPF.ServiceRent.Account accountObject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/addAccount")]
        void addAccount(RentTransportWPF.ServiceRent.Account accountObject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/addAccount")]
        System.Threading.Tasks.Task addAccountAsync(RentTransportWPF.ServiceRent.Account accountObject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/deleteAccount")]
        void deleteAccount(RentTransportWPF.ServiceRent.Account accountObject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/deleteAccount")]
        System.Threading.Tasks.Task deleteAccountAsync(RentTransportWPF.ServiceRent.Account accountObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/createVehicleObjectParams", ReplyAction="http://tempuri.org/IServiceRent/createVehicleObjectParamsResponse")]
        RentTransportWPF.ServiceRent.Vehicle[] createVehicleObjectParams(int min, int max, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/createVehicleObjectParams", ReplyAction="http://tempuri.org/IServiceRent/createVehicleObjectParamsResponse")]
        System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.Vehicle[]> createVehicleObjectParamsAsync(int min, int max, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/GetAllVehicle", ReplyAction="http://tempuri.org/IServiceRent/GetAllVehicleResponse")]
        int GetAllVehicle();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/GetAllVehicle", ReplyAction="http://tempuri.org/IServiceRent/GetAllVehicleResponse")]
        System.Threading.Tasks.Task<int> GetAllVehicleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/GetAllRentVehicle", ReplyAction="http://tempuri.org/IServiceRent/GetAllRentVehicleResponse")]
        int GetAllRentVehicle();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/GetAllRentVehicle", ReplyAction="http://tempuri.org/IServiceRent/GetAllRentVehicleResponse")]
        System.Threading.Tasks.Task<int> GetAllRentVehicleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/GetAllNoRentVehicle", ReplyAction="http://tempuri.org/IServiceRent/GetAllNoRentVehicleResponse")]
        int GetAllNoRentVehicle();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/GetAllNoRentVehicle", ReplyAction="http://tempuri.org/IServiceRent/GetAllNoRentVehicleResponse")]
        System.Threading.Tasks.Task<int> GetAllNoRentVehicleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/noAcceptedAccount", ReplyAction="http://tempuri.org/IServiceRent/noAcceptedAccountResponse")]
        RentTransportWPF.ServiceRent.Account noAcceptedAccount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/noAcceptedAccount", ReplyAction="http://tempuri.org/IServiceRent/noAcceptedAccountResponse")]
        System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.Account> noAcceptedAccountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/findVehicle", ReplyAction="http://tempuri.org/IServiceRent/findVehicleResponse")]
        RentTransportWPF.ServiceRent.Vehicle findVehicle(string plate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/findVehicle", ReplyAction="http://tempuri.org/IServiceRent/findVehicleResponse")]
        System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.Vehicle> findVehicleAsync(string plate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/uploadVehicleImage", ReplyAction="http://tempuri.org/IServiceRent/uploadVehicleImageResponse")]
        void uploadVehicleImage(byte[] buffer, string name, string extenstion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/uploadVehicleImage", ReplyAction="http://tempuri.org/IServiceRent/uploadVehicleImageResponse")]
        System.Threading.Tasks.Task uploadVehicleImageAsync(byte[] buffer, string name, string extenstion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/vehicleImage", ReplyAction="http://tempuri.org/IServiceRent/vehicleImageResponse")]
        byte[] vehicleImage(RentTransportWPF.ServiceRent.Vehicle vehicleObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/vehicleImage", ReplyAction="http://tempuri.org/IServiceRent/vehicleImageResponse")]
        System.Threading.Tasks.Task<byte[]> vehicleImageAsync(RentTransportWPF.ServiceRent.Vehicle vehicleObject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/log_AddVehicle")]
        void log_AddVehicle(int userid, string VIN);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/log_AddVehicle")]
        System.Threading.Tasks.Task log_AddVehicleAsync(int userid, string VIN);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/log_Balance")]
        void log_Balance(int userid, string card, float value);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/log_Balance")]
        System.Threading.Tasks.Task log_BalanceAsync(int userid, string card, float value);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/log_DeleteVehicle")]
        void log_DeleteVehicle(int userid, string VIN, string name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/log_DeleteVehicle")]
        System.Threading.Tasks.Task log_DeleteVehicleAsync(int userid, string VIN, string name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/log_EditVehicle")]
        void log_EditVehicle(int userid, string VIN, string str_params);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/log_EditVehicle")]
        System.Threading.Tasks.Task log_EditVehicleAsync(int userid, string VIN, string str_params);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/log_RemoveRent")]
        void log_RemoveRent(int userid, int takerentid, System.DateTime date, float balancereturn, float credit);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/log_RemoveRent")]
        System.Threading.Tasks.Task log_RemoveRentAsync(int userid, int takerentid, System.DateTime date, float balancereturn, float credit);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/log_Request")]
        void log_Request(int admin_userid, int application_userid, int answer);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/log_Request")]
        System.Threading.Tasks.Task log_RequestAsync(int admin_userid, int application_userid, int answer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/log_TakeRent", ReplyAction="http://tempuri.org/IServiceRent/log_TakeRentResponse")]
        int log_TakeRent(int userid, string VIN, float price, int cashVoucherId, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/log_TakeRent", ReplyAction="http://tempuri.org/IServiceRent/log_TakeRentResponse")]
        System.Threading.Tasks.Task<int> log_TakeRentAsync(int userid, string VIN, float price, int cashVoucherId, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/topAccountMoney", ReplyAction="http://tempuri.org/IServiceRent/topAccountMoneyResponse")]
        RentTransportWPF.ServiceRent.Account[] topAccountMoney();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/topAccountMoney", ReplyAction="http://tempuri.org/IServiceRent/topAccountMoneyResponse")]
        System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.Account[]> topAccountMoneyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/SendStatInfo", ReplyAction="http://tempuri.org/IServiceRent/SendStatInfoResponse")]
        RentTransportWPF.ServiceRent.StatInfo SendStatInfo(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/SendStatInfo", ReplyAction="http://tempuri.org/IServiceRent/SendStatInfoResponse")]
        System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.StatInfo> SendStatInfoAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/selectVehicle", ReplyAction="http://tempuri.org/IServiceRent/selectVehicleResponse")]
        RentTransportWPF.ServiceRent.Vehicle selectVehicle(string VIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/selectVehicle", ReplyAction="http://tempuri.org/IServiceRent/selectVehicleResponse")]
        System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.Vehicle> selectVehicleAsync(string VIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/sendCashVoucherData", ReplyAction="http://tempuri.org/IServiceRent/sendCashVoucherDataResponse")]
        RentTransportWPF.ServiceRent.CashVoucherData sendCashVoucherData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/sendCashVoucherData", ReplyAction="http://tempuri.org/IServiceRent/sendCashVoucherDataResponse")]
        System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.CashVoucherData> sendCashVoucherDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/readCashVoucher", ReplyAction="http://tempuri.org/IServiceRent/readCashVoucherResponse")]
        RentTransportWPF.ServiceRent.CashVoucher readCashVoucher(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/readCashVoucher", ReplyAction="http://tempuri.org/IServiceRent/readCashVoucherResponse")]
        System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.CashVoucher> readCashVoucherAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/writeCashVoucher", ReplyAction="http://tempuri.org/IServiceRent/writeCashVoucherResponse")]
        int writeCashVoucher(RentTransportWPF.ServiceRent.CashVoucher cashVoucher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/writeCashVoucher", ReplyAction="http://tempuri.org/IServiceRent/writeCashVoucherResponse")]
        System.Threading.Tasks.Task<int> writeCashVoucherAsync(RentTransportWPF.ServiceRent.CashVoucher cashVoucher);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/setCashVoucherData")]
        void setCashVoucherData(string Company, string Street);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/setCashVoucherData")]
        System.Threading.Tasks.Task setCashVoucherDataAsync(string Company, string Street);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/sendCashVoucherID", ReplyAction="http://tempuri.org/IServiceRent/sendCashVoucherIDResponse")]
        int sendCashVoucherID(int logtakerentid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/sendCashVoucherID", ReplyAction="http://tempuri.org/IServiceRent/sendCashVoucherIDResponse")]
        System.Threading.Tasks.Task<int> sendCashVoucherIDAsync(int logtakerentid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceRentCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/onSaveVehicle")]
        void onSaveVehicle(RentTransportWPF.ServiceRent.Vehicle vehicleObject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/onDeleteVehicle")]
        void onDeleteVehicle(RentTransportWPF.ServiceRent.Vehicle vehicleObject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceRent/sendNotification")]
        void sendNotification(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceRentChannel : RentTransportWPF.ServiceRent.IServiceRent, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceRentClient : System.ServiceModel.DuplexClientBase<RentTransportWPF.ServiceRent.IServiceRent>, RentTransportWPF.ServiceRent.IServiceRent {
        
        public ServiceRentClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceRentClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceRentClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRentClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRentClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public int userConnect() {
            return base.Channel.userConnect();
        }
        
        public System.Threading.Tasks.Task<int> userConnectAsync() {
            return base.Channel.userConnectAsync();
        }
        
        public void userDisconnect(int id) {
            base.Channel.userDisconnect(id);
        }
        
        public System.Threading.Tasks.Task userDisconnectAsync(int id) {
            return base.Channel.userDisconnectAsync(id);
        }
        
        public RentTransportWPF.ServiceRent.Account selectAccount(string login, string password) {
            return base.Channel.selectAccount(login, password);
        }
        
        public System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.Account> selectAccountAsync(string login, string password) {
            return base.Channel.selectAccountAsync(login, password);
        }
        
        public void createSqlConnection(string path) {
            base.Channel.createSqlConnection(path);
        }
        
        public System.Threading.Tasks.Task createSqlConnectionAsync(string path) {
            return base.Channel.createSqlConnectionAsync(path);
        }
        
        public void selectAllVehicle() {
            base.Channel.selectAllVehicle();
        }
        
        public System.Threading.Tasks.Task selectAllVehicleAsync() {
            return base.Channel.selectAllVehicleAsync();
        }
        
        public void deleteVehicle(RentTransportWPF.ServiceRent.Vehicle vehicleObject) {
            base.Channel.deleteVehicle(vehicleObject);
        }
        
        public System.Threading.Tasks.Task deleteVehicleAsync(RentTransportWPF.ServiceRent.Vehicle vehicleObject) {
            return base.Channel.deleteVehicleAsync(vehicleObject);
        }
        
        public void addVehicle(RentTransportWPF.ServiceRent.Vehicle vehicleObject) {
            base.Channel.addVehicle(vehicleObject);
        }
        
        public System.Threading.Tasks.Task addVehicleAsync(RentTransportWPF.ServiceRent.Vehicle vehicleObject) {
            return base.Channel.addVehicleAsync(vehicleObject);
        }
        
        public void saveVehicle(RentTransportWPF.ServiceRent.Vehicle vehicleObject) {
            base.Channel.saveVehicle(vehicleObject);
        }
        
        public System.Threading.Tasks.Task saveVehicleAsync(RentTransportWPF.ServiceRent.Vehicle vehicleObject) {
            return base.Channel.saveVehicleAsync(vehicleObject);
        }
        
        public bool isAccountValid(string login) {
            return base.Channel.isAccountValid(login);
        }
        
        public System.Threading.Tasks.Task<bool> isAccountValidAsync(string login) {
            return base.Channel.isAccountValidAsync(login);
        }
        
        public bool isSqlConnection() {
            return base.Channel.isSqlConnection();
        }
        
        public System.Threading.Tasks.Task<bool> isSqlConnectionAsync() {
            return base.Channel.isSqlConnectionAsync();
        }
        
        public RentTransportWPF.ServiceRent.Vehicle getUserVehicle(RentTransportWPF.ServiceRent.Account account) {
            return base.Channel.getUserVehicle(account);
        }
        
        public System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.Vehicle> getUserVehicleAsync(RentTransportWPF.ServiceRent.Account account) {
            return base.Channel.getUserVehicleAsync(account);
        }
        
        public void saveAccount(RentTransportWPF.ServiceRent.Account accountObject) {
            base.Channel.saveAccount(accountObject);
        }
        
        public System.Threading.Tasks.Task saveAccountAsync(RentTransportWPF.ServiceRent.Account accountObject) {
            return base.Channel.saveAccountAsync(accountObject);
        }
        
        public void addAccount(RentTransportWPF.ServiceRent.Account accountObject) {
            base.Channel.addAccount(accountObject);
        }
        
        public System.Threading.Tasks.Task addAccountAsync(RentTransportWPF.ServiceRent.Account accountObject) {
            return base.Channel.addAccountAsync(accountObject);
        }
        
        public void deleteAccount(RentTransportWPF.ServiceRent.Account accountObject) {
            base.Channel.deleteAccount(accountObject);
        }
        
        public System.Threading.Tasks.Task deleteAccountAsync(RentTransportWPF.ServiceRent.Account accountObject) {
            return base.Channel.deleteAccountAsync(accountObject);
        }
        
        public RentTransportWPF.ServiceRent.Vehicle[] createVehicleObjectParams(int min, int max, int type) {
            return base.Channel.createVehicleObjectParams(min, max, type);
        }
        
        public System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.Vehicle[]> createVehicleObjectParamsAsync(int min, int max, int type) {
            return base.Channel.createVehicleObjectParamsAsync(min, max, type);
        }
        
        public int GetAllVehicle() {
            return base.Channel.GetAllVehicle();
        }
        
        public System.Threading.Tasks.Task<int> GetAllVehicleAsync() {
            return base.Channel.GetAllVehicleAsync();
        }
        
        public int GetAllRentVehicle() {
            return base.Channel.GetAllRentVehicle();
        }
        
        public System.Threading.Tasks.Task<int> GetAllRentVehicleAsync() {
            return base.Channel.GetAllRentVehicleAsync();
        }
        
        public int GetAllNoRentVehicle() {
            return base.Channel.GetAllNoRentVehicle();
        }
        
        public System.Threading.Tasks.Task<int> GetAllNoRentVehicleAsync() {
            return base.Channel.GetAllNoRentVehicleAsync();
        }
        
        public RentTransportWPF.ServiceRent.Account noAcceptedAccount() {
            return base.Channel.noAcceptedAccount();
        }
        
        public System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.Account> noAcceptedAccountAsync() {
            return base.Channel.noAcceptedAccountAsync();
        }
        
        public RentTransportWPF.ServiceRent.Vehicle findVehicle(string plate) {
            return base.Channel.findVehicle(plate);
        }
        
        public System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.Vehicle> findVehicleAsync(string plate) {
            return base.Channel.findVehicleAsync(plate);
        }
        
        public void uploadVehicleImage(byte[] buffer, string name, string extenstion) {
            base.Channel.uploadVehicleImage(buffer, name, extenstion);
        }
        
        public System.Threading.Tasks.Task uploadVehicleImageAsync(byte[] buffer, string name, string extenstion) {
            return base.Channel.uploadVehicleImageAsync(buffer, name, extenstion);
        }
        
        public byte[] vehicleImage(RentTransportWPF.ServiceRent.Vehicle vehicleObject) {
            return base.Channel.vehicleImage(vehicleObject);
        }
        
        public System.Threading.Tasks.Task<byte[]> vehicleImageAsync(RentTransportWPF.ServiceRent.Vehicle vehicleObject) {
            return base.Channel.vehicleImageAsync(vehicleObject);
        }
        
        public void log_AddVehicle(int userid, string VIN) {
            base.Channel.log_AddVehicle(userid, VIN);
        }
        
        public System.Threading.Tasks.Task log_AddVehicleAsync(int userid, string VIN) {
            return base.Channel.log_AddVehicleAsync(userid, VIN);
        }
        
        public void log_Balance(int userid, string card, float value) {
            base.Channel.log_Balance(userid, card, value);
        }
        
        public System.Threading.Tasks.Task log_BalanceAsync(int userid, string card, float value) {
            return base.Channel.log_BalanceAsync(userid, card, value);
        }
        
        public void log_DeleteVehicle(int userid, string VIN, string name) {
            base.Channel.log_DeleteVehicle(userid, VIN, name);
        }
        
        public System.Threading.Tasks.Task log_DeleteVehicleAsync(int userid, string VIN, string name) {
            return base.Channel.log_DeleteVehicleAsync(userid, VIN, name);
        }
        
        public void log_EditVehicle(int userid, string VIN, string str_params) {
            base.Channel.log_EditVehicle(userid, VIN, str_params);
        }
        
        public System.Threading.Tasks.Task log_EditVehicleAsync(int userid, string VIN, string str_params) {
            return base.Channel.log_EditVehicleAsync(userid, VIN, str_params);
        }
        
        public void log_RemoveRent(int userid, int takerentid, System.DateTime date, float balancereturn, float credit) {
            base.Channel.log_RemoveRent(userid, takerentid, date, balancereturn, credit);
        }
        
        public System.Threading.Tasks.Task log_RemoveRentAsync(int userid, int takerentid, System.DateTime date, float balancereturn, float credit) {
            return base.Channel.log_RemoveRentAsync(userid, takerentid, date, balancereturn, credit);
        }
        
        public void log_Request(int admin_userid, int application_userid, int answer) {
            base.Channel.log_Request(admin_userid, application_userid, answer);
        }
        
        public System.Threading.Tasks.Task log_RequestAsync(int admin_userid, int application_userid, int answer) {
            return base.Channel.log_RequestAsync(admin_userid, application_userid, answer);
        }
        
        public int log_TakeRent(int userid, string VIN, float price, int cashVoucherId, System.DateTime startdate, System.DateTime enddate) {
            return base.Channel.log_TakeRent(userid, VIN, price, cashVoucherId, startdate, enddate);
        }
        
        public System.Threading.Tasks.Task<int> log_TakeRentAsync(int userid, string VIN, float price, int cashVoucherId, System.DateTime startdate, System.DateTime enddate) {
            return base.Channel.log_TakeRentAsync(userid, VIN, price, cashVoucherId, startdate, enddate);
        }
        
        public RentTransportWPF.ServiceRent.Account[] topAccountMoney() {
            return base.Channel.topAccountMoney();
        }
        
        public System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.Account[]> topAccountMoneyAsync() {
            return base.Channel.topAccountMoneyAsync();
        }
        
        public RentTransportWPF.ServiceRent.StatInfo SendStatInfo(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.SendStatInfo(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.StatInfo> SendStatInfoAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.SendStatInfoAsync(startDate, endDate);
        }
        
        public RentTransportWPF.ServiceRent.Vehicle selectVehicle(string VIN) {
            return base.Channel.selectVehicle(VIN);
        }
        
        public System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.Vehicle> selectVehicleAsync(string VIN) {
            return base.Channel.selectVehicleAsync(VIN);
        }
        
        public RentTransportWPF.ServiceRent.CashVoucherData sendCashVoucherData() {
            return base.Channel.sendCashVoucherData();
        }
        
        public System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.CashVoucherData> sendCashVoucherDataAsync() {
            return base.Channel.sendCashVoucherDataAsync();
        }
        
        public RentTransportWPF.ServiceRent.CashVoucher readCashVoucher(int Id) {
            return base.Channel.readCashVoucher(Id);
        }
        
        public System.Threading.Tasks.Task<RentTransportWPF.ServiceRent.CashVoucher> readCashVoucherAsync(int Id) {
            return base.Channel.readCashVoucherAsync(Id);
        }
        
        public int writeCashVoucher(RentTransportWPF.ServiceRent.CashVoucher cashVoucher) {
            return base.Channel.writeCashVoucher(cashVoucher);
        }
        
        public System.Threading.Tasks.Task<int> writeCashVoucherAsync(RentTransportWPF.ServiceRent.CashVoucher cashVoucher) {
            return base.Channel.writeCashVoucherAsync(cashVoucher);
        }
        
        public void setCashVoucherData(string Company, string Street) {
            base.Channel.setCashVoucherData(Company, Street);
        }
        
        public System.Threading.Tasks.Task setCashVoucherDataAsync(string Company, string Street) {
            return base.Channel.setCashVoucherDataAsync(Company, Street);
        }
        
        public int sendCashVoucherID(int logtakerentid) {
            return base.Channel.sendCashVoucherID(logtakerentid);
        }
        
        public System.Threading.Tasks.Task<int> sendCashVoucherIDAsync(int logtakerentid) {
            return base.Channel.sendCashVoucherIDAsync(logtakerentid);
        }
    }
}
